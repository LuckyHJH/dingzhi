<?php/** * ECSHOP 商品管理程序 * ============================================================================ * * 版权所有 2005-2012 上海商派网络科技有限公司，并保留所有权利。 * 网站地址: http://www.ecshop.com； * ---------------------------------------------------------------------------- * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和 * 使用；不允许对程序代码以任何形式任何目的的再发布。 * ============================================================================ * $Author: liubo $ * $Id: goods.php 17217 2011-01-19 06:29:08Z liubo $*/define('IN_ECS', true);require(dirname(__FILE__) . '/includes/init.php');require_once(ROOT_PATH . '/' . ADMIN_PATH . '/includes/lib_goods.php');include_once(ROOT_PATH . '/includes/cls_image.php');$image = new cls_image($_CFG['bgcolor']);//$exc = new exchange($ecs->table('goods'), $db, 'goods_id', 'goods_name');/*------------------------------------------------------ *///-- 商品列表，商品回收站/*------------------------------------------------------ */if ($_REQUEST['act'] == 'list' || $_REQUEST['act'] == 'trash'){    admin_priv('goods_manage');    if ($_REQUEST['act'] == 'list' && isset($handler_list[$code]))    {        $smarty->assign('add_handler',      $handler_list[$code]);    }    /* 模板赋值 */    $smarty->assign('ur_here', $_LANG['00_material_list']);    $action_link = ($_REQUEST['act'] == 'list') ? add_link($code) : array('href' => 'goods.php?act=list', 'text' => $_LANG['00_material_list']);    $smarty->assign('action_link',  $action_link);    $sql = 'SELECT * '.        'FROM ' . $GLOBALS['ecs']->table('material') . $where .        'ORDER BY material_id desc LIMIT 50';    $material_list = $GLOBALS['db']->getAll($sql);    $smarty->assign('material_list',   $material_list);    /* 记录总数 */    $sql = "SELECT COUNT(*) FROM " .$GLOBALS['ecs']->table('material'). " AS g $where";    $filter['record_count'] = $GLOBALS['db']->getOne($sql);    /* 分页大小 */    $filter = page_and_size($filter);    $smarty->assign('record_count', $filter['record_count']);    $smarty->assign('page_count',   $filter['page_count']);    $smarty->assign('filter',       $filter);    $smarty->assign('full_page',    1);    /* 排序标记 */    $sort_flag  = sort_flag($goods_list['filter']);    $smarty->assign($sort_flag['tag'], $sort_flag['img']);    /* 显示商品列表页面 */    assign_query_info();    $smarty->display('material_list.htm');}/*------------------------------------------------------ *///-- 添加新商品 编辑商品/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'add' || $_REQUEST['act'] == 'edit' || $_REQUEST['act'] == 'copy'){    $is_add = $_REQUEST['act'] == 'add'; // 添加还是编辑的标识    $is_copy = $_REQUEST['act'] == 'copy'; //是否复制    $code = empty($_REQUEST['extension_code']) ? '' : trim($_REQUEST['extension_code']);    $code=$code=='virual_card' ? 'virual_card': '';    if ($code == 'virual_card')    {        admin_priv('virualcard'); // 检查权限    }    else    {        admin_priv('goods_manage'); // 检查权限    }    /* 如果是安全模式，检查目录是否存在 */    if (ini_get('safe_mode') == 1 && (!file_exists('../' . IMAGE_DIR . '/'.date('Ym')) || !is_dir('../' . IMAGE_DIR . '/'.date('Ym'))))    {        if (@!mkdir('../' . IMAGE_DIR . '/'.date('Ym'), 0777))        {            $warning = sprintf($_LANG['safe_mode_warning'], '../' . IMAGE_DIR . '/'.date('Ym'));            $smarty->assign('warning', $warning);        }    }    /* 如果目录存在但不可写，提示用户 */    elseif (file_exists('../' . IMAGE_DIR . '/'.date('Ym')) && file_mode_info('../' . IMAGE_DIR . '/'.date('Ym')) < 2)    {        $warning = sprintf($_LANG['not_writable_warning'], '../' . IMAGE_DIR . '/'.date('Ym'));        $smarty->assign('warning', $warning);    }    /* 取得商品信息 */    if ($is_add)    {        /* 默认值 */        $last_choose = array(0, 0);        $goods = array(            'goods_id'      => 0,            'goods_desc'    => '',            'cat_id'        => $last_choose[0],            'brand_id'      => $last_choose[1],            'is_on_sale'    => '1',            'is_alone_sale' => '1',            'is_shipping' => '0',            'other_cat'     => array(), // 扩展分类            'goods_type'    => 0,       // 商品类型            'shop_price'    => 0,            'promote_price' => 0,            'market_price'  => 0,            'integral'      => 0,            'goods_number'  => $_CFG['default_storage'],            'warn_number'   => 1,            'promote_start_date' => local_date('Y-m-d'),            'promote_end_date'   => local_date('Y-m-d', local_strtotime('+1 month')),            'goods_weight'  => 0,            'give_integral' => -1,            'rank_integral' => -1        );        if ($code != '')        {            $goods['goods_number'] = 0;        }    }    else    {        /* 商品信息 */        $sql = "SELECT * FROM " . $ecs->table('material') . " WHERE material_id = '$_REQUEST[material_id]'";        $material = $db->getRow($sql);        if (empty($material) === true)        {            /* 默认值 */            $material = array(                'material_id'      => 0,                'cat_id'        => 0,                'name'    => '',                'price'    => 0,                'material'    => '',                'weight'    => '',                'season'    => '',                'grain'    => '',            );        }        $material['material_img'] = get_image_path($_REQUEST['material_id'], $material['material_img']);        $material['shirt_img'] = get_image_path($_REQUEST['material_id'], $material['shirt_img']);    }    /* 模板赋值 */    $smarty->assign('ur_here', $is_add ? $_LANG['00_material_add'] : '编辑面料' );    $smarty->assign('action_link', list_link($is_add, $code));    $smarty->assign('material', $material);    $smarty->assign('cfg', $_CFG);    $smarty->assign('form_act', $is_add ? 'insert' : ($_REQUEST['act'] == 'edit' ? 'update' : 'insert'));    if ($_REQUEST['act'] == 'add' || $_REQUEST['act'] == 'edit')    {        $smarty->assign('is_add', true);    }    if(!$is_add)    {        $smarty->assign('member_price_list', get_member_price_list($_REQUEST['material_id']));    }    $smarty->assign('img_list', $img_list);    $smarty->assign('gd', gd_version());    $smarty->assign('thumb_width', $_CFG['thumb_width']);    $smarty->assign('thumb_height', $_CFG['thumb_height']);    /* 显示商品信息页面 */    assign_query_info();    $smarty->display('material_info.htm');}/*------------------------------------------------------ *///-- 插入商品 更新商品/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'insert' || $_REQUEST['act'] == 'update'){    /* 检查图片：如果有错误，检查尺寸是否超过最大值；否则，检查文件类型 */    if (isset($_FILES['material_img']['error'])) // php 4.2 版本才支持 error    {        // 最大上传文件大小        $php_maxsize = ini_get('upload_max_filesize');        $htm_maxsize = '2M';        // 面料图片        if ($_FILES['material_img']['error'] == 0)        {            if (!$image->check_img_type($_FILES['material_img']['type']))            {                sys_msg('图片错误', 1, array(), false);            }        }        elseif ($_FILES['material_img']['error'] == 1)        {            sys_msg('图片太大', 1, array(), false);        }        elseif ($_FILES['material_img']['error'] == 2)        {            sys_msg('图片太大', 1, array(), false);        }        // 衬衣图片        if ($_FILES['shirt_img']['error'] == 0)        {            if (!$image->check_img_type($_FILES['shirt_img']['type']))            {                sys_msg('图片错误', 1, array(), false);            }        }        elseif ($_FILES['shirt_img']['error'] == 1)        {            sys_msg('图片太大', 1, array(), false);        }        elseif ($_FILES['shirt_img']['error'] == 2)        {            sys_msg('图片太大', 1, array(), false);        }    }    /* 4.1版本 */    else    {        // 面料图片        if ($_FILES['material_img']['tmp_name'] != 'none')        {            if (!$image->check_img_type($_FILES['material_img']['type']))            {                sys_msg('图片错误', 1, array(), false);            }        }        // 衬衣图片        if ($_FILES['shirt_img']['tmp_name'] != 'none')        {            if (!$image->check_img_type($_FILES['shirt_img']['type']))            {                sys_msg('图片错误', 1, array(), false);            }        }    }    /* 插入还是更新的标识 */    $is_insert = $_REQUEST['act'] == 'insert';    /* 处理商品图片 */    $material_img       = '';  // 初始化商品图片    $shirt_img          = '';  // 初始化衬衣图片    $original_img     = '';  // 初始化原始图片    $old_original_img = '';  // 初始化原始图片旧图    // 如果上传了商品图片，相应处理    if (($_FILES['material_img']['tmp_name'] != '' && $_FILES['material_img']['tmp_name'] != 'none') or (($_POST['material_img_url'] != '图片URL' && $_POST['material_img_url'] != 'http://') && $is_url_material_img = 1))    {        if ($_REQUEST['material_id'] > 0)        {            /* 删除原来的图片文件 */            $sql = "SELECT material_img " .                    " FROM " . $ecs->table('material') .                    " WHERE material_id = '$_REQUEST[material_id]'";            $row = $db->getRow($sql);            if ($row['material_img'] != '' && is_file('../' . $row['material_img']))            {                @unlink('../' . $row['material_img']);            }        }        if (empty($is_url_material_img))        {            $original_img   = $image->upload_image($_FILES['material_img']); // 原始图片        }        elseif ($_POST['material_img_url'])        {            if(preg_match('/(.jpg|.png|.gif|.jpeg)$/',$_POST['material_img_url']) && copy(trim($_POST['material_img_url']), ROOT_PATH . 'temp/' . basename($_POST['material_img_url'])))            {                  $original_img = 'temp/' . basename($_POST['material_img_url']);            }        }        if ($original_img === false)        {            sys_msg($image->error_msg(), 1, array(), false);        }        $material_img      = $original_img;   // 商品图片    }    // 如果上传了衬衣图片，相应处理    if (($_FILES['shirt_img']['tmp_name'] != '' && $_FILES['shirt_img']['tmp_name'] != 'none') or (($_POST['shirt_img_url'] != '图片URL' && $_POST['shirt_img_url'] != 'http://') && $is_url_shirt_img = 1))    {        if ($_REQUEST['material_id'] > 0)        {            /* 删除原来的图片文件 */            $sql = "SELECT shirt_img " .                    " FROM " . $ecs->table('material') .                    " WHERE material_id = '$_REQUEST[material_id]'";            $row = $db->getRow($sql);            if ($row['shirt_img'] != '' && is_file('../' . $row['shirt_img']))            {                @unlink('../' . $row['shirt_img']);            }        }        if (empty($is_url_shirt_img))        {            $original_img   = $image->upload_image($_FILES['shirt_img']); // 原始图片        }        elseif ($_POST['shirt_img_url'])        {            if(preg_match('/(.jpg|.png|.gif|.jpeg)$/',$_POST['shirt_img_url']) && copy(trim($_POST['shirt_img_url']), ROOT_PATH . 'temp/' . basename($_POST['shirt_img_url'])))            {                  $original_img = 'temp/' . basename($_POST['shirt_img_url']);            }        }        if ($original_img === false)        {            sys_msg($image->error_msg(), 1, array(), false);        }        $shirt_img      = $original_img;   // 衬衣图片    }    /* 删除下载的外链原图 */    if (!empty($is_url_material_img))    {        @nk(ROOT_PATH . $original_img);        empty($newname) || @unlink(ROOT_PATH . $newname);        $url_material_img = $material_img = $original_img = htmlspecialchars(trim($_POST['material_img_url']));    }    if (!empty($is_url_shirt_img))    {        @unlink(ROOT_PATH . $original_img);        empty($newname) || @unlink(ROOT_PATH . $newname);        $url_shirt_img = $shirt_img = $original_img = htmlspecialchars(trim($_POST['shirt_img_url']));    }    /* 处理商品数据 */    $price = !empty($_POST['price']) ? $_POST['price'] : 0;    $cat_id = !empty($_POST['cat_id']) ? $_POST['cat_id'] : 0;    $name = !empty($_POST['name']) ? $_POST['name'] : '';    $material = !empty($_POST['material']) ? $_POST['material'] : '';    $weight = !empty($_POST['weight']) ? $_POST['weight'] : '';    $season = !empty($_POST['season']) ? $_POST['season'] : '';    $grain = !empty($_POST['grain']) ? $_POST['grain'] : '';    /* 入库 */    if ($is_insert)    {        $sql = "INSERT INTO " . $ecs->table('material') . " (status, cat_id, name, price,".             "thumb, material_img, shirt_img, material, weight, season, grain)" .            "VALUES (1,".$cat_id.",'".$name."',".$price.            ",'','".$material_img."','".$shirt_img."','".$material."','".$weight."','".$season."','".$grain."')";    }    else    {        /* 如果有上传图片，删除原来的商品图 */        $sql = "SELECT material_img, shirt_img " .                    " FROM " . $ecs->table('material') .                    " WHERE material_id = '$_REQUEST[material_id]'";        $row = $db->getRow($sql);        if ($proc_thumb && $material_img && $row['material_img'] && !goods_parse_url($row['material_img']))        {            @unlink(ROOT_PATH . $row['material_img']);            @unlink(ROOT_PATH . $row['shirt_img']);        }        $sql = "UPDATE " . $ecs->table('material') . " SET " .                "name = '$name', " .                "price = '$price', " .                "cat_id = '$catgory_id', " ;        /* 如果有上传图片，需要更新数据库 */        if ($material_img)        {            $sql .= "material_img = '$material_img', ";        }        if ($shirt_img)        {            $sql .= "shirt_img = '$shirt_img', ";        }        $sql .= "material = '$material', " .                "weight = '$weight', " .                "season = '$season', " .                "grain = '$grain' " .                "WHERE material_id = '$_REQUEST[material_id]' LIMIT 1";    }    $db->query($sql);    /* 商品编号 */    $material_id = $is_insert ? $db->insert_id() : $_REQUEST['material_id'];    /* 重新格式化图片名称 *///    $original_img = reformat_image_name('goods', $goods_id, $original_img, 'source');//    $material_img = reformat_image_name('goods', $goods_id, $material_img, 'goods');//    if ($material_img !== false)//    {//        $db->query("UPDATE " . $ecs->table('goods') . " SET material_img = '$material_img' WHERE goods_id='$goods_id'");//    }//    if ($original_img !== false)//    {//        $db->query("UPDATE " . $ecs->table('goods') . " SET original_img = '$original_img' WHERE goods_id='$goods_id'");//    }    /* 清空缓存 */    clear_cache_files();    /* 提示页面 */    $link = array();    if ($is_insert)    {        $link[2] = add_link($code);    }    $link[3] = list_link($is_insert, $code);    //$key_array = array_keys($link);    for($i=0;$i<count($link);$i++)    {       $key_array[]=$i;    }    krsort($link);    $link = array_combine($key_array, $link);    sys_msg($is_insert ? '添加面料成功' : '修改面料成功', 0, $link);}/*------------------------------------------------------ *///-- 批量操作/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'batch'){    $code = empty($_REQUEST['extension_code'])? '' : trim($_REQUEST['extension_code']);    /* 取得要操作的商品编号 */    $goods_id = !empty($_POST['checkboxes']) ? join(',', $_POST['checkboxes']) : 0;    if (isset($_POST['type']))    {        /* 放入回收站 */        if ($_POST['type'] == 'trash')        {            /* 检查权限 */            admin_priv('remove_back');            update_goods($goods_id, 'is_delete', '1');            /* 记录日志 */            admin_log('', 'batch_trash', 'goods');        }        /* 上架 */        elseif ($_POST['type'] == 'on_sale')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_on_sale', '1');        }        /* 下架 */        elseif ($_POST['type'] == 'not_on_sale')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_on_sale', '0');        }        /* 设为精品 */        elseif ($_POST['type'] == 'best')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_best', '1');        }        /* 取消精品 */        elseif ($_POST['type'] == 'not_best')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_best', '0');        }        /* 设为新品 */        elseif ($_POST['type'] == 'new')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_new', '1');        }        /* 取消新品 */        elseif ($_POST['type'] == 'not_new')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_new', '0');        }        /* 设为热销 */        elseif ($_POST['type'] == 'hot')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_hot', '1');        }        /* 取消热销 */        elseif ($_POST['type'] == 'not_hot')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'is_hot', '0');        }        /* 转移到分类 */        elseif ($_POST['type'] == 'move_to')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'cat_id', $_POST['target_cat']);        }        /* 转移到供货商 */        elseif ($_POST['type'] == 'suppliers_move_to')        {            /* 检查权限 */            admin_priv('goods_manage');            update_goods($goods_id, 'suppliers_id', $_POST['suppliers_id']);        }        /* 还原 */        elseif ($_POST['type'] == 'restore')        {            /* 检查权限 */            admin_priv('remove_back');            update_goods($goods_id, 'is_delete', '0');            /* 记录日志 */            admin_log('', 'batch_restore', 'goods');        }        /* 删除 */        elseif ($_POST['type'] == 'drop')        {            /* 检查权限 */            admin_priv('remove_back');            delete_goods($goods_id);            /* 记录日志 */            admin_log('', 'batch_remove', 'goods');        }    }    /* 清除缓存 */    clear_cache_files();    if ($_POST['type'] == 'drop' || $_POST['type'] == 'restore')    {        $link[] = array('href' => 'goods.php?act=trash', 'text' => $_LANG['11_goods_trash']);    }    else    {        $link[] = list_link(true, $code);    }    sys_msg($_LANG['batch_handle_ok'], 0, $link);}/*------------------------------------------------------ *///-- 显示图片/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'show_image'){    if (isset($GLOBALS['shop_id']) && $GLOBALS['shop_id'] > 0)    {        $img_url = $_GET['img_url'];    }    else    {        if (strpos($_GET['img_url'], 'http://') === 0)        {            $img_url = $_GET['img_url'];        }        else        {            $img_url = '../' . $_GET['img_url'];        }    }    $smarty->assign('img_url', $img_url);    $smarty->display('goods_show_image.htm');}/*------------------------------------------------------ *///-- 修改商品名称/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'edit_goods_name'){    check_authz_json('goods_manage');    $goods_id   = intval($_POST['id']);    $goods_name = json_str_iconv(trim($_POST['val']));    if ($exc->edit("goods_name = '$goods_name', last_update=" .gmtime(), $goods_id))    {        clear_cache_files();        make_json_result(stripslashes($goods_name));    }}/*------------------------------------------------------ *///-- 修改商品价格/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'edit_goods_price'){    check_authz_json('goods_manage');    $goods_id       = intval($_POST['id']);    $goods_price    = floatval($_POST['val']);    $price_rate     = floatval($_CFG['market_price_rate'] * $goods_price);    if ($goods_price < 0 || $goods_price == 0 && $_POST['val'] != "$goods_price")    {        make_json_error($_LANG['shop_price_invalid']);    }    else    {        if ($exc->edit("shop_price = '$goods_price', market_price = '$price_rate', last_update=" .gmtime(), $goods_id))        {            clear_cache_files();            make_json_result(number_format($goods_price, 2, '.', ''));        }    }}/*------------------------------------------------------ *///-- 修改商品排序/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'edit_sort_order'){    check_authz_json('goods_manage');    $goods_id       = intval($_POST['id']);    $sort_order     = intval($_POST['val']);    if ($exc->edit("sort_order = '$sort_order', last_update=" .gmtime(), $goods_id))    {        clear_cache_files();        make_json_result($sort_order);    }}/*------------------------------------------------------ *///-- 排序、分页、查询/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'query'){    $is_delete = empty($_REQUEST['is_delete']) ? 0 : intval($_REQUEST['is_delete']);    $code = empty($_REQUEST['extension_code']) ? '' : trim($_REQUEST['extension_code']);    $goods_list = goods_list($is_delete, ($code=='') ? 1 : 0);    $handler_list = array();    $handler_list['virtual_card'][] = array('url'=>'virtual_card.php?act=card', 'title'=>$_LANG['card'], 'img'=>'icon_send_bonus.gif');    $handler_list['virtual_card'][] = array('url'=>'virtual_card.php?act=replenish', 'title'=>$_LANG['replenish'], 'img'=>'icon_add.gif');    $handler_list['virtual_card'][] = array('url'=>'virtual_card.php?act=batch_card_add', 'title'=>$_LANG['batch_card_add'], 'img'=>'icon_output.gif');    if (isset($handler_list[$code]))    {        $smarty->assign('add_handler',      $handler_list[$code]);    }    $smarty->assign('code',         $code);    $smarty->assign('goods_list',   $goods_list['goods']);    $smarty->assign('filter',       $goods_list['filter']);    $smarty->assign('record_count', $goods_list['record_count']);    $smarty->assign('page_count',   $goods_list['page_count']);    $smarty->assign('list_type',    $is_delete ? 'trash' : 'goods');    $smarty->assign('use_storage',  empty($_CFG['use_storage']) ? 0 : 1);    /* 排序标记 */    $sort_flag  = sort_flag($goods_list['filter']);    $smarty->assign($sort_flag['tag'], $sort_flag['img']);    /* 获取商品类型存在规格的类型 */    $specifications = get_goods_type_specifications();    $smarty->assign('specifications', $specifications);    $tpl = $is_delete ? 'goods_trash.htm' : 'goods_list.htm';    make_json_result($smarty->fetch($tpl), '',        array('filter' => $goods_list['filter'], 'page_count' => $goods_list['page_count']));}/*------------------------------------------------------ *///-- 放入回收站/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'remove'){    $goods_id = intval($_REQUEST['id']);    /* 检查权限 */    check_authz_json('remove_back');    if ($exc->edit("is_delete = 1", $goods_id))    {        clear_cache_files();        $goods_name = $exc->get_name($goods_id);        admin_log(addslashes($goods_name), 'trash', 'goods'); // 记录日志        $url = 'goods.php?act=query&' . str_replace('act=remove', '', $_SERVER['QUERY_STRING']);        ecs_header("Location: $url\n");        exit;    }}/*------------------------------------------------------ *///-- 还原回收站中的商品/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'restore_goods'){    $goods_id = intval($_REQUEST['id']);    check_authz_json('remove_back'); // 检查权限    $exc->edit("is_delete = 0, add_time = '" . gmtime() . "'", $goods_id);    clear_cache_files();    $goods_name = $exc->get_name($goods_id);    admin_log(addslashes($goods_name), 'restore', 'goods'); // 记录日志    $url = 'goods.php?act=query&' . str_replace('act=restore_goods', '', $_SERVER['QUERY_STRING']);    ecs_header("Location: $url\n");    exit;}/*------------------------------------------------------ *///-- 彻底删除商品/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'drop_goods'){    // 检查权限    check_authz_json('remove_back');    // 取得参数    $goods_id = intval($_REQUEST['id']);    if ($goods_id <= 0)    {        make_json_error('invalid params');    }    /* 取得商品信息 */    $sql = "SELECT goods_id, goods_name, is_delete, is_real, goods_thumb, " .                "goods_img, original_img " .            "FROM " . $ecs->table('goods') .            " WHERE goods_id = '$goods_id'";    $goods = $db->getRow($sql);    if (empty($goods))    {        make_json_error($_LANG['goods_not_exist']);    }    if ($goods['is_delete'] != 1)    {        make_json_error($_LANG['goods_not_in_recycle_bin']);    }    /* 删除商品图片和轮播图片 */    if (!empty($goods['goods_thumb']))    {        @unlink('../' . $goods['goods_thumb']);    }    if (!empty($goods['goods_img']))    {        @unlink('../' . $goods['goods_img']);    }    if (!empty($goods['original_img']))    {        @unlink('../' . $goods['original_img']);    }    /* 删除商品 */    $exc->drop($goods_id);    /* 删除商品的货品记录 */    $sql = "DELETE FROM " . $ecs->table('products') .            " WHERE goods_id = '$goods_id'";    $db->query($sql);    /* 记录日志 */    admin_log(addslashes($goods['goods_name']), 'remove', 'goods');    /* 删除商品相册 */    $sql = "SELECT img_url, thumb_url, img_original " .            "FROM " . $ecs->table('goods_gallery') .            " WHERE goods_id = '$goods_id'";    $res = $db->query($sql);    while ($row = $db->fetchRow($res))    {        if (!empty($row['img_url']))        {            @unlink('../' . $row['img_url']);        }        if (!empty($row['thumb_url']))        {            @unlink('../' . $row['thumb_url']);        }        if (!empty($row['img_original']))        {            @unlink('../' . $row['img_original']);        }    }    $sql = "DELETE FROM " . $ecs->table('goods_gallery') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    /* 删除相关表记录 */    $sql = "DELETE FROM " . $ecs->table('collect_goods') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('goods_article') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('goods_attr') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('goods_cat') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('member_price') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('group_goods') . " WHERE parent_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('group_goods') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('link_goods') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('link_goods') . " WHERE link_goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('tag') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('comment') . " WHERE comment_type = 0 AND id_value = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('collect_goods') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('booking_goods') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    $sql = "DELETE FROM " . $ecs->table('goods_activity') . " WHERE goods_id = '$goods_id'";    $db->query($sql);    /* 如果不是实体商品，删除相应虚拟商品记录 */    if ($goods['is_real'] != 1)    {        $sql = "DELETE FROM " . $ecs->table('virtual_card') . " WHERE goods_id = '$goods_id'";        if (!$db->query($sql, 'SILENT') && $db->errno() != 1146)        {            die($db->error());        }    }    clear_cache_files();    $url = 'goods.php?act=query&' . str_replace('act=drop_goods', '', $_SERVER['QUERY_STRING']);    ecs_header("Location: $url\n");    exit;}/*------------------------------------------------------ *///-- 切换商品类型/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'get_attr'){    check_authz_json('goods_manage');    $goods_id   = empty($_GET['goods_id']) ? 0 : intval($_GET['goods_id']);    $goods_type = empty($_GET['goods_type']) ? 0 : intval($_GET['goods_type']);    $content    = build_attr_html($goods_type, $goods_id);    make_json_result($content);}/*------------------------------------------------------ *///-- 删除图片/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'drop_image'){    check_authz_json('goods_manage');    $img_id = empty($_REQUEST['img_id']) ? 0 : intval($_REQUEST['img_id']);    /* 删除图片文件 */    $sql = "SELECT img_url, thumb_url, img_original " .            " FROM " . $GLOBALS['ecs']->table('goods_gallery') .            " WHERE img_id = '$img_id'";    $row = $GLOBALS['db']->getRow($sql);    if ($row['img_url'] != '' && is_file('../' . $row['img_url']))    {        @unlink('../' . $row['img_url']);    }    if ($row['thumb_url'] != '' && is_file('../' . $row['thumb_url']))    {        @unlink('../' . $row['thumb_url']);    }    if ($row['img_original'] != '' && is_file('../' . $row['img_original']))    {        @unlink('../' . $row['img_original']);    }    /* 删除数据 */    $sql = "DELETE FROM " . $GLOBALS['ecs']->table('goods_gallery') . " WHERE img_id = '$img_id' LIMIT 1";    $GLOBALS['db']->query($sql);    clear_cache_files();    make_json_result($img_id);}/*------------------------------------------------------ *///-- 搜索商品，仅返回名称及ID/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'get_goods_list'){    include_once(ROOT_PATH . 'includes/cls_json.php');    $json = new JSON;    $filters = $json->decode($_GET['JSON']);    $arr = get_goods_list($filters);    $opt = array();    foreach ($arr AS $key => $val)    {        $opt[] = array('value' => $val['goods_id'],                        'text' => $val['goods_name'],                        'data' => $val['shop_price']);    }    make_json_result($opt);}/*------------------------------------------------------ *///-- 货品列表/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'product_list'){    admin_priv('goods_manage');    /* 是否存在商品id */    if (empty($_GET['goods_id']))    {        $link[] = array('href' => 'goods.php?act=list', 'text' => $_LANG['cannot_found_goods']);        sys_msg($_LANG['cannot_found_goods'], 1, $link);    }    else    {        $goods_id = intval($_GET['goods_id']);    }    /* 取出商品信息 */    $sql = "SELECT goods_sn, goods_name, goods_type, shop_price FROM " . $ecs->table('goods') . " WHERE goods_id = '$goods_id'";    $goods = $db->getRow($sql);    if (empty($goods))    {        $link[] = array('href' => 'goods.php?act=list', 'text' => $_LANG['01_goods_list']);        sys_msg($_LANG['cannot_found_goods'], 1, $link);    }    $smarty->assign('sn', sprintf($_LANG['good_goods_sn'], $goods['goods_sn']));    $smarty->assign('price', sprintf($_LANG['good_shop_price'], $goods['shop_price']));    $smarty->assign('goods_name', sprintf($_LANG['products_title'], $goods['goods_name']));    $smarty->assign('goods_sn', sprintf($_LANG['products_title_2'], $goods['goods_sn']));    /* 获取商品规格列表 */    $attribute = get_goods_specifications_list($goods_id);    if (empty($attribute))    {        $link[] = array('href' => 'goods.php?act=edit&goods_id=' . $goods_id, 'text' => $_LANG['edit_goods']);        sys_msg($_LANG['not_exist_goods_attr'], 1, $link);    }    foreach ($attribute as $attribute_value)    {        //转换成数组        $_attribute[$attribute_value['attr_id']]['attr_values'][] = $attribute_value['attr_value'];        $_attribute[$attribute_value['attr_id']]['attr_id'] = $attribute_value['attr_id'];        $_attribute[$attribute_value['attr_id']]['attr_name'] = $attribute_value['attr_name'];    }    $attribute_count = count($_attribute);    $smarty->assign('attribute_count',          $attribute_count);    $smarty->assign('attribute_count_3',        ($attribute_count + 3));    $smarty->assign('attribute',                $_attribute);    $smarty->assign('product_sn',               $goods['goods_sn'] . '_');    $smarty->assign('product_number',           $_CFG['default_storage']);    /* 取商品的货品 */    $product = product_list($goods_id, '');    $smarty->assign('ur_here',      $_LANG['18_product_list']);    $smarty->assign('action_link',  array('href' => 'goods.php?act=list', 'text' => $_LANG['01_goods_list']));    $smarty->assign('product_list', $product['product']);    $smarty->assign('product_null', empty($product['product']) ? 0 : 1);    $smarty->assign('use_storage',  empty($_CFG['use_storage']) ? 0 : 1);    $smarty->assign('goods_id',     $goods_id);    $smarty->assign('filter',       $product['filter']);    $smarty->assign('full_page',    1);    /* 显示商品列表页面 */    assign_query_info();    $smarty->display('product_info.htm');}/*------------------------------------------------------ *///-- 货品排序、分页、查询/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'product_query'){    /* 是否存在商品id */    if (empty($_REQUEST['goods_id']))    {        make_json_error($_LANG['sys']['wrong'] . $_LANG['cannot_found_goods']);    }    else    {        $goods_id = intval($_REQUEST['goods_id']);    }    /* 取出商品信息 */    $sql = "SELECT goods_sn, goods_name, goods_type, shop_price FROM " . $ecs->table('goods') . " WHERE goods_id = '$goods_id'";    $goods = $db->getRow($sql);    if (empty($goods))    {        make_json_error($_LANG['sys']['wrong'] . $_LANG['cannot_found_goods']);    }    $smarty->assign('sn', sprintf($_LANG['good_goods_sn'], $goods['goods_sn']));    $smarty->assign('price', sprintf($_LANG['good_shop_price'], $goods['shop_price']));    $smarty->assign('goods_name', sprintf($_LANG['products_title'], $goods['goods_name']));    $smarty->assign('goods_sn', sprintf($_LANG['products_title_2'], $goods['goods_sn']));    /* 获取商品规格列表 */    $attribute = get_goods_specifications_list($goods_id);    if (empty($attribute))    {        make_json_error($_LANG['sys']['wrong'] . $_LANG['cannot_found_goods']);    }    foreach ($attribute as $attribute_value)    {        //转换成数组        $_attribute[$attribute_value['attr_id']]['attr_values'][] = $attribute_value['attr_value'];        $_attribute[$attribute_value['attr_id']]['attr_id'] = $attribute_value['attr_id'];        $_attribute[$attribute_value['attr_id']]['attr_name'] = $attribute_value['attr_name'];    }    $attribute_count = count($_attribute);    $smarty->assign('attribute_count',          $attribute_count);    $smarty->assign('attribute',                $_attribute);    $smarty->assign('attribute_count_3',        ($attribute_count + 3));    $smarty->assign('product_sn',               $goods['goods_sn'] . '_');    $smarty->assign('product_number',           $_CFG['default_storage']);    /* 取商品的货品 */    $product = product_list($goods_id, '');    $smarty->assign('ur_here', $_LANG['18_product_list']);    $smarty->assign('action_link', array('href' => 'goods.php?act=list', 'text' => $_LANG['01_goods_list']));    $smarty->assign('product_list',  $product['product']);    $smarty->assign('use_storage',  empty($_CFG['use_storage']) ? 0 : 1);    $smarty->assign('goods_id',    $goods_id);    $smarty->assign('filter',       $product['filter']);    /* 排序标记 */    $sort_flag  = sort_flag($product['filter']);    $smarty->assign($sort_flag['tag'], $sort_flag['img']);    make_json_result($smarty->fetch('product_info.htm'), '',        array('filter' => $product['filter'], 'page_count' => $product['page_count']));}/*------------------------------------------------------ *///-- 货品删除/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'product_remove'){    /* 检查权限 */    check_authz_json('remove_back');    /* 是否存在商品id */    if (empty($_REQUEST['id']))    {        make_json_error($_LANG['product_id_null']);    }    else    {        $product_id = intval($_REQUEST['id']);    }    /* 货品库存 */    $product = get_product_info($product_id, 'product_number, goods_id');    /* 删除货品 */    $sql = "DELETE FROM " . $ecs->table('products') . " WHERE product_id = '$product_id'";    $result = $db->query($sql);    if ($result)    {        /* 修改商品库存 */        if (update_goods_stock($product['goods_id'], $product_number - $product['product_number']))        {            //记录日志            admin_log('', 'update', 'goods');        }        //记录日志        admin_log('', 'trash', 'products');        $url = 'goods.php?act=product_query&' . str_replace('act=product_remove', '', $_SERVER['QUERY_STRING']);        ecs_header("Location: $url\n");        exit;    }}/*------------------------------------------------------ *///-- 修改货品价格/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'edit_product_sn'){    check_authz_json('goods_manage');    $product_id       = intval($_POST['id']);    $product_sn       = json_str_iconv(trim($_POST['val']));    $product_sn       = ($_LANG['n_a'] == $product_sn) ? '' : $product_sn;    if (check_product_sn_exist($product_sn, $product_id))    {        make_json_error($_LANG['sys']['wrong'] . $_LANG['exist_same_product_sn']);    }    /* 修改 */    $sql = "UPDATE " . $ecs->table('products') . " SET product_sn = '$product_sn' WHERE product_id = '$product_id'";    $result = $db->query($sql);    if ($result)    {        clear_cache_files();        make_json_result($product_sn);    }}/*------------------------------------------------------ *///-- 修改货品库存/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'edit_product_number'){    check_authz_json('goods_manage');    $product_id       = intval($_POST['id']);    $product_number       = intval($_POST['val']);    /* 货品库存 */    $product = get_product_info($product_id, 'product_number, goods_id');    /* 修改货品库存 */    $sql = "UPDATE " . $ecs->table('products') . " SET product_number = '$product_number' WHERE product_id = '$product_id'";    $result = $db->query($sql);    if ($result)    {        /* 修改商品库存 */        if (update_goods_stock($product['goods_id'], $product_number - $product['product_number']))        {            clear_cache_files();            make_json_result($product_number);        }    }}/*------------------------------------------------------ *///-- 货品添加 执行/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'product_add_execute'){    admin_priv('goods_manage');    $product['goods_id']        = intval($_POST['goods_id']);    $product['attr']            = $_POST['attr'];    $product['product_sn']      = $_POST['product_sn'];    $product['product_number']  = $_POST['product_number'];    /* 是否存在商品id */    if (empty($product['goods_id']))    {        sys_msg($_LANG['sys']['wrong'] . $_LANG['cannot_found_goods'], 1, array(), false);    }    /* 判断是否为初次添加 */    $insert = true;    if (product_number_count($product['goods_id']) > 0)    {        $insert = false;    }    /* 取出商品信息 */    $sql = "SELECT goods_sn, goods_name, goods_type, shop_price FROM " . $ecs->table('goods') . " WHERE goods_id = '" . $product['goods_id'] . "'";    $goods = $db->getRow($sql);    if (empty($goods))    {        sys_msg($_LANG['sys']['wrong'] . $_LANG['cannot_found_goods'], 1, array(), false);    }    /*  */    foreach($product['product_sn'] as $key => $value)    {        //过滤        $product['product_number'][$key] = empty($product['product_number'][$key]) ? (empty($_CFG['use_storage']) ? 0 : $_CFG['default_storage']) : trim($product['product_number'][$key]); //库存        //获取规格在商品属性表中的id        foreach($product['attr'] as $attr_key => $attr_value)        {            /* 检测：如果当前所添加的货品规格存在空值或0 */            if (empty($attr_value[$key]))            {                continue 2;            }            $is_spec_list[$attr_key] = 'true';            $value_price_list[$attr_key] = $attr_value[$key] . chr(9) . ''; //$key，当前            $id_list[$attr_key] = $attr_key;        }        $goods_attr_id = handle_goods_attr($product['goods_id'], $id_list, $is_spec_list, $value_price_list);        /* 是否为重复规格的货品 */        $goods_attr = sort_goods_attr_id_array($goods_attr_id);        $goods_attr = implode('|', $goods_attr['sort']);        if (check_goods_attr_exist($goods_attr, $product['goods_id']))        {            continue;            //sys_msg($_LANG['sys']['wrong'] . $_LANG['exist_same_goods_attr'], 1, array(), false);        }        //货品号不为空        if (!empty($value))        {            /* 检测：货品货号是否在商品表和货品表中重复 */            if (check_goods_sn_exist($value))            {                continue;                //sys_msg($_LANG['sys']['wrong'] . $_LANG['exist_same_goods_sn'], 1, array(), false);            }            if (check_product_sn_exist($value))            {                continue;                //sys_msg($_LANG['sys']['wrong'] . $_LANG['exist_same_product_sn'], 1, array(), false);            }        }        /* 插入货品表 */        $sql = "INSERT INTO " . $GLOBALS['ecs']->table('products') . " (goods_id, goods_attr, product_sn, product_number)  VALUES ('" . $product['goods_id'] . "', '$goods_attr', '$value', '" . $product['product_number'][$key] . "')";        if (!$GLOBALS['db']->query($sql))        {            continue;            //sys_msg($_LANG['sys']['wrong'] . $_LANG['cannot_add_products'], 1, array(), false);        }        //货品号为空 自动补货品号        if (empty($value))        {            $sql = "UPDATE " . $GLOBALS['ecs']->table('products') . "                    SET product_sn = '" . $goods['goods_sn'] . "g_p" . $GLOBALS['db']->insert_id() . "'                    WHERE product_id = '" . $GLOBALS['db']->insert_id() . "'";            $GLOBALS['db']->query($sql);        }        /* 修改商品表库存 */        $product_count = product_number_count($product['goods_id']);        if (update_goods($product['goods_id'], 'goods_number', $product_count))        {            //记录日志            admin_log($product['goods_id'], 'update', 'goods');        }    }    clear_cache_files();    /* 返回 */    if ($insert)    {         $link[] = array('href' => 'goods.php?act=add', 'text' => $_LANG['02_goods_add']);         $link[] = array('href' => 'goods.php?act=list', 'text' => $_LANG['01_goods_list']);         $link[] = array('href' => 'goods.php?act=product_list&goods_id=' . $product['goods_id'], 'text' => $_LANG['18_product_list']);    }    else    {         $link[] = array('href' => 'goods.php?act=list&uselastfilter=1', 'text' => $_LANG['01_goods_list']);         $link[] = array('href' => 'goods.php?act=edit&goods_id=' . $product['goods_id'], 'text' => $_LANG['edit_goods']);         $link[] = array('href' => 'goods.php?act=product_list&goods_id=' . $product['goods_id'], 'text' => $_LANG['18_product_list']);    }    sys_msg($_LANG['save_products'], 0, $link);}/*------------------------------------------------------ *///-- 货品批量操作/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'batch_product'){    /* 定义返回 */    $link[] = array('href' => 'goods.php?act=product_list&goods_id=' . $_POST['goods_id'], 'text' => $_LANG['item_list']);    /* 批量操作 - 批量删除 */    if ($_POST['type'] == 'drop')    {        //检查权限        admin_priv('remove_back');        //取得要操作的商品编号        $product_id = !empty($_POST['checkboxes']) ? join(',', $_POST['checkboxes']) : 0;        $product_bound = db_create_in($product_id);        //取出货品库存总数        $sum = 0;        $goods_id = 0;        $sql = "SELECT product_id, goods_id, product_number FROM  " . $GLOBALS['ecs']->table('products') . " WHERE product_id $product_bound";        $product_array = $GLOBALS['db']->getAll($sql);        if (!empty($product_array))        {            foreach ($product_array as $value)            {                $sum += $value['product_number'];            }            $goods_id = $product_array[0]['goods_id'];            /* 删除货品 */            $sql = "DELETE FROM " . $ecs->table('products') . " WHERE product_id $product_bound";            if ($db->query($sql))            {                //记录日志                admin_log('', 'delete', 'products');            }            /* 修改商品库存 */            if (update_goods_stock($goods_id, -$sum))            {                //记录日志                admin_log('', 'update', 'goods');            }            /* 返回 */            sys_msg($_LANG['product_batch_del_success'], 0, $link);        }        else        {            /* 错误 */            sys_msg($_LANG['cannot_found_products'], 1, $link);        }    }    /* 返回 */    sys_msg($_LANG['no_operation'], 1, $link);}/** * 列表链接 * @param   bool    $is_add         是否添加（插入） * @param   string  $extension_code 虚拟商品扩展代码，实体商品为空 * @return  array('href' => $href, 'text' => $text) */function list_link($is_add = true, $extension_code = ''){    $href = 'material.php?act=list';    if (!empty($extension_code))    {        $href .= '&extension_code=' . $extension_code;    }    if (!$is_add)    {        $href .= '&' . list_link_postfix();    }    if ($extension_code == 'virtual_card')    {        $text = $GLOBALS['_LANG']['50_virtual_card_list'];    }    else    {        $text = $GLOBALS['_LANG']['00_material_list'];    }    return array('href' => $href, 'text' => $text);}/** * 添加链接 * @param   string  $extension_code 虚拟商品扩展代码，实体商品为空 * @return  array('href' => $href, 'text' => $text) */function add_link($extension_code = ''){    $href = 'material.php?act=add';    if (!empty($extension_code))    {        $href .= '&extension_code=' . $extension_code;    }    $text = $GLOBALS['_LANG']['00_material_add'];    return array('href' => $href, 'text' => $text);}/** * 检查图片网址是否合法 * * @param string $url 网址 * * @return boolean */function goods_parse_url($url){    $parse_url = @parse_url($url);    return (!empty($parse_url['scheme']) && !empty($parse_url['host']));}/** * 保存某商品的优惠价格 * @param   int     $goods_id    商品编号 * @param   array   $number_list 优惠数量列表 * @param   array   $price_list  价格列表 * @return  void */function handle_volume_price($goods_id, $number_list, $price_list){    $sql = "DELETE FROM " . $GLOBALS['ecs']->table('volume_price') .           " WHERE price_type = '1' AND goods_id = '$goods_id'";    $GLOBALS['db']->query($sql);    /* 循环处理每个优惠价格 */    foreach ($price_list AS $key => $price)    {        /* 价格对应的数量上下限 */        $volume_number = $number_list[$key];        if (!empty($price))        {            $sql = "INSERT INTO " . $GLOBALS['ecs']->table('volume_price') .                   " (price_type, goods_id, volume_number, volume_price) " .                   "VALUES ('1', '$goods_id', '$volume_number', '$price')";            $GLOBALS['db']->query($sql);        }    }}/** * 修改商品库存 * @param   string  $goods_id   商品编号，可以为多个，用 ',' 隔开 * @param   string  $value      字段值 * @return  bool */function update_goods_stock($goods_id, $value){    if ($goods_id)    {        /* $res = $goods_number - $old_product_number + $product_number; */        $sql = "UPDATE " . $GLOBALS['ecs']->table('goods') . "                SET goods_number = goods_number + $value,                    last_update = '". gmtime() ."'                WHERE goods_id = '$goods_id'";        $result = $GLOBALS['db']->query($sql);        /* 清除缓存 */        clear_cache_files();        return $result;    }    else    {        return false;    }}?>